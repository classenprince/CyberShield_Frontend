{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Prince Singh\\\\OneDrive\\\\Desktop\\\\Cyber_shield\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Papa from 'papaparse';\nimport Dashboard from './components/Dashboard';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    // Load CSV data\n    const loadCSVData = async () => {\n      try {\n        const response = await fetch('/nodes_export_for_frontend (1).csv');\n        const csvText = await response.text();\n        Papa.parse(csvText, {\n          header: true,\n          complete: results => {\n            // Filter out the \"Unnamed: 0\" entry and clean the data\n            const cleanData = results.data.filter(row => row.Label && row.Label !== 'Unnamed: 0' && row['Closeness Centrality'] !== '0.0').map(row => ({\n              ...row,\n              'Closeness Centrality': parseFloat(row['Closeness Centrality']),\n              'Betweenness Centrality': parseFloat(row['Betweenness Centrality']),\n              'Eccentricity': parseInt(row['Eccentricity']),\n              'Modularity Class': parseInt(row['Modularity Class'])\n            }));\n            setData(cleanData);\n            setLoading(false);\n          },\n          error: error => {\n            console.error('Error parsing CSV:', error);\n            setLoading(false);\n          }\n        });\n      } catch (error) {\n        console.error('Error loading CSV:', error);\n        setLoading(false);\n      }\n    };\n    loadCSVData();\n  }, []);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-spinner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading OSINT Intelligence Dashboard...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(Dashboard, {\n      data: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"YP7e7Smzxlgf2d3MqLcgRZjo83U=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Papa","Dashboard","jsxDEV","_jsxDEV","App","_s","data","setData","loading","setLoading","loadCSVData","response","fetch","csvText","text","parse","header","complete","results","cleanData","filter","row","Label","map","parseFloat","parseInt","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Prince Singh/OneDrive/Desktop/Cyber_shield/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Papa from 'papaparse';\r\nimport Dashboard from './components/Dashboard';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  const [data, setData] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    // Load CSV data\r\n    const loadCSVData = async () => {\r\n      try {\r\n        const response = await fetch('/nodes_export_for_frontend (1).csv');\r\n        const csvText = await response.text();\r\n        \r\n        Papa.parse(csvText, {\r\n          header: true,\r\n          complete: (results) => {\r\n            // Filter out the \"Unnamed: 0\" entry and clean the data\r\n            const cleanData = results.data.filter(row => \r\n              row.Label && row.Label !== 'Unnamed: 0' && \r\n              row['Closeness Centrality'] !== '0.0'\r\n            ).map(row => ({\r\n              ...row,\r\n              'Closeness Centrality': parseFloat(row['Closeness Centrality']),\r\n              'Betweenness Centrality': parseFloat(row['Betweenness Centrality']),\r\n              'Eccentricity': parseInt(row['Eccentricity']),\r\n              'Modularity Class': parseInt(row['Modularity Class'])\r\n            }));\r\n            \r\n            setData(cleanData);\r\n            setLoading(false);\r\n          },\r\n          error: (error) => {\r\n            console.error('Error parsing CSV:', error);\r\n            setLoading(false);\r\n          }\r\n        });\r\n      } catch (error) {\r\n        console.error('Error loading CSV:', error);\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    loadCSVData();\r\n  }, []);\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"loading-container\">\r\n        <div className=\"loading-spinner\"></div>\r\n        <p>Loading OSINT Intelligence Dashboard...</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Dashboard data={data} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}