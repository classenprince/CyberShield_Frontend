{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Prince Singh\\\\OneDrive\\\\Desktop\\\\Cyber_shield\\\\src\\\\components\\\\Dashboard.js\";\nimport React from 'react';\nimport MetricsPanel from './MetricsPanel';\nimport AlertsSection from './AlertsSection';\nimport './Dashboard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = ({\n  data\n}) => {\n  // Get unique data sources from the data\n  const dataSources = [...new Set(data.map(item => item.dataSource))];\n  const currentSource = dataSources[0] || 'Unknown Source';\n\n  // Calculate top accounts by different metrics\n  const topHubAccounts = [...data].filter(item => item['Closeness Centrality'] !== undefined).sort((a, b) => b['Closeness Centrality'] - a['Closeness Centrality']).slice(0, 3);\n  const topBridgeAccounts = [...data].filter(item => item['Betweenness Centrality'] !== undefined).sort((a, b) => b['Betweenness Centrality'] - a['Betweenness Centrality']).slice(0, 3);\n  const peripheralAccounts = [...data].filter(item => item['Eccentricity'] !== undefined).sort((a, b) => b['Eccentricity'] - a['Eccentricity']).slice(0, 5);\n\n  // Group accounts by modularity class (only for network data)\n  const networkData = data.filter(item => item['Modularity Class'] !== undefined);\n  const communities = networkData.reduce((acc, account) => {\n    const community = account['Modularity Class'];\n    if (!acc[community]) acc[community] = [];\n    acc[community].push(account);\n    return acc;\n  }, {});\n\n  // Calculate alerts\n  const alerts = [];\n\n  // Hub alerts (high closeness)\n  topHubAccounts.forEach(account => {\n    if (account['Closeness Centrality'] > 0.8) {\n      alerts.push({\n        type: 'hub',\n        message: `🔵 Hub Alert: ${account.Label} is highly connected across platforms`,\n        severity: 'high',\n        data: account\n      });\n    }\n  });\n\n  // Bridge alerts (high betweenness)\n  topBridgeAccounts.forEach(account => {\n    if (account['Betweenness Centrality'] > 3.0) {\n      alerts.push({\n        type: 'bridge',\n        message: `🟠 Bridge Alert: ${account.Label} links different alias clusters`,\n        severity: 'medium',\n        data: account\n      });\n    }\n  });\n\n  // Fringe alerts (high eccentricity)\n  peripheralAccounts.forEach(account => {\n    if (account['Eccentricity'] > 2) {\n      alerts.push({\n        type: 'fringe',\n        message: `🟡 Fringe Alert: ${account.Label} appears isolated`,\n        severity: 'low',\n        data: account\n      });\n    }\n  });\n\n  // Subgroup alerts (small communities)\n  Object.entries(communities).forEach(([community, accounts]) => {\n    if (accounts.length < 5) {\n      alerts.push({\n        type: 'subgroup',\n        message: `🟢 Subgroup Alert: Community ${community} has only ${accounts.length} accounts`,\n        severity: 'info',\n        data: {\n          community,\n          count: accounts.length,\n          accounts\n        }\n      });\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"dashboard-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\uD83D\\uDEE1\\uFE0F Cyber Shield OSINT Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Identity Intelligence & Network Analysis\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"data-source-banner\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"source-icon\",\n          children: \"\\uD83D\\uDCCA\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"source-text\",\n          children: [\"Currently displaying data from: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: currentSource\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 73\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"record-count\",\n          children: [\"(\", data.length, \" records)\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stats-summary\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"\\uD83D\\uDCCA \", data.length, \" Records Analyzed\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"\\uD83D\\uDD17 \", Object.keys(communities).length, \" Communities Detected\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"\\uD83D\\uDEA8 \", alerts.length, \" Alerts Generated\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-content\",\n      children: [/*#__PURE__*/_jsxDEV(MetricsPanel, {\n        topHubAccounts: topHubAccounts,\n        topBridgeAccounts: topBridgeAccounts,\n        peripheralAccounts: peripheralAccounts,\n        communities: communities\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dashboard-grid\",\n        children: /*#__PURE__*/_jsxDEV(AlertsSection, {\n          alerts: alerts\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n};\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","MetricsPanel","AlertsSection","jsxDEV","_jsxDEV","Dashboard","data","dataSources","Set","map","item","dataSource","currentSource","topHubAccounts","filter","undefined","sort","a","b","slice","topBridgeAccounts","peripheralAccounts","networkData","communities","reduce","acc","account","community","push","alerts","forEach","type","message","Label","severity","Object","entries","accounts","length","count","className","children","fileName","_jsxFileName","lineNumber","columnNumber","keys","_c","$RefreshReg$"],"sources":["C:/Users/Prince Singh/OneDrive/Desktop/Cyber_shield/src/components/Dashboard.js"],"sourcesContent":["import React from 'react';\r\nimport MetricsPanel from './MetricsPanel';\r\nimport AlertsSection from './AlertsSection';\r\nimport './Dashboard.css';\r\n\r\nconst Dashboard = ({ data }) => {\r\n  // Get unique data sources from the data\r\n  const dataSources = [...new Set(data.map(item => item.dataSource))];\r\n  const currentSource = dataSources[0] || 'Unknown Source';\r\n  \r\n  // Calculate top accounts by different metrics\r\n  const topHubAccounts = [...data]\r\n    .filter(item => item['Closeness Centrality'] !== undefined)\r\n    .sort((a, b) => b['Closeness Centrality'] - a['Closeness Centrality'])\r\n    .slice(0, 3);\r\n\r\n  const topBridgeAccounts = [...data]\r\n    .filter(item => item['Betweenness Centrality'] !== undefined)\r\n    .sort((a, b) => b['Betweenness Centrality'] - a['Betweenness Centrality'])\r\n    .slice(0, 3);\r\n\r\n  const peripheralAccounts = [...data]\r\n    .filter(item => item['Eccentricity'] !== undefined)\r\n    .sort((a, b) => b['Eccentricity'] - a['Eccentricity'])\r\n    .slice(0, 5);\r\n\r\n  // Group accounts by modularity class (only for network data)\r\n  const networkData = data.filter(item => item['Modularity Class'] !== undefined);\r\n  const communities = networkData.reduce((acc, account) => {\r\n    const community = account['Modularity Class'];\r\n    if (!acc[community]) acc[community] = [];\r\n    acc[community].push(account);\r\n    return acc;\r\n  }, {});\r\n\r\n  // Calculate alerts\r\n  const alerts = [];\r\n  \r\n  // Hub alerts (high closeness)\r\n  topHubAccounts.forEach(account => {\r\n    if (account['Closeness Centrality'] > 0.8) {\r\n      alerts.push({\r\n        type: 'hub',\r\n        message: `🔵 Hub Alert: ${account.Label} is highly connected across platforms`,\r\n        severity: 'high',\r\n        data: account\r\n      });\r\n    }\r\n  });\r\n\r\n  // Bridge alerts (high betweenness)\r\n  topBridgeAccounts.forEach(account => {\r\n    if (account['Betweenness Centrality'] > 3.0) {\r\n      alerts.push({\r\n        type: 'bridge',\r\n        message: `🟠 Bridge Alert: ${account.Label} links different alias clusters`,\r\n        severity: 'medium',\r\n        data: account\r\n      });\r\n    }\r\n  });\r\n\r\n  // Fringe alerts (high eccentricity)\r\n  peripheralAccounts.forEach(account => {\r\n    if (account['Eccentricity'] > 2) {\r\n      alerts.push({\r\n        type: 'fringe',\r\n        message: `🟡 Fringe Alert: ${account.Label} appears isolated`,\r\n        severity: 'low',\r\n        data: account\r\n      });\r\n    }\r\n  });\r\n\r\n  // Subgroup alerts (small communities)\r\n  Object.entries(communities).forEach(([community, accounts]) => {\r\n    if (accounts.length < 5) {\r\n      alerts.push({\r\n        type: 'subgroup',\r\n        message: `🟢 Subgroup Alert: Community ${community} has only ${accounts.length} accounts`,\r\n        severity: 'info',\r\n        data: { community, count: accounts.length, accounts }\r\n      });\r\n    }\r\n  });\r\n\r\n  return (\r\n    <div className=\"dashboard\">\r\n      <header className=\"dashboard-header\">\r\n        <h1>🛡️ Cyber Shield OSINT Dashboard</h1>\r\n        <p>Identity Intelligence & Network Analysis</p>\r\n        \r\n        {/* Data Source Information */}\r\n        <div className=\"data-source-banner\">\r\n          <span className=\"source-icon\">📊</span>\r\n          <span className=\"source-text\">Currently displaying data from: <strong>{currentSource}</strong></span>\r\n          <span className=\"record-count\">({data.length} records)</span>\r\n        </div>\r\n        \r\n        <div className=\"stats-summary\">\r\n          <span>📊 {data.length} Records Analyzed</span>\r\n          <span>🔗 {Object.keys(communities).length} Communities Detected</span>\r\n          <span>🚨 {alerts.length} Alerts Generated</span>\r\n        </div>\r\n      </header>\r\n\r\n      <div className=\"dashboard-content\">\r\n        <MetricsPanel \r\n          topHubAccounts={topHubAccounts}\r\n          topBridgeAccounts={topBridgeAccounts}\r\n          peripheralAccounts={peripheralAccounts}\r\n          communities={communities}\r\n        />\r\n        \r\n        <div className=\"dashboard-grid\">\r\n          <AlertsSection alerts={alerts} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}